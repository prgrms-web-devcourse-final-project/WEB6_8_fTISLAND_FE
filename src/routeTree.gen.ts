/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SignupIndexRouteImport } from './routes/signup/index'
import { Route as ManageAddressIndexRouteImport } from './routes/manage-address/index'
import { Route as MakeProfileIndexRouteImport } from './routes/make-profile/index'
import { Route as LoginIndexRouteImport } from './routes/login/index'
import { Route as PaymentSuccessRouteImport } from './routes/payment/success'
import { Route as PaymentFailRouteImport } from './routes/payment/fail'
import { Route as MakeProfileSellerIndexRouteImport } from './routes/make-profile/seller/index'
import { Route as MakeProfileRiderIndexRouteImport } from './routes/make-profile/rider/index'
import { Route as MakeProfileCustomerIndexRouteImport } from './routes/make-profile/customer/index'
import { Route as dashboardSellerIndexRouteImport } from './routes/(dashboard)/seller/index'
import { Route as dashboardRiderIndexRouteImport } from './routes/(dashboard)/rider/index'
import { Route as dashboardCustomerIndexRouteImport } from './routes/(dashboard)/customer/index'
import { Route as dashboardSellerLayoutRouteImport } from './routes/(dashboard)/seller/_layout'
import { Route as dashboardRiderLayoutRouteImport } from './routes/(dashboard)/rider/_layout'
import { Route as dashboardCustomerLayoutRouteImport } from './routes/(dashboard)/customer/_layout'
import { Route as dashboardSellerMypageIndexRouteImport } from './routes/(dashboard)/seller/mypage/index'
import { Route as dashboardSellerManageIndexRouteImport } from './routes/(dashboard)/seller/manage/index'
import { Route as dashboardSellerCreateStoreIndexRouteImport } from './routes/(dashboard)/seller/create-store/index'
import { Route as dashboardRiderSettlementIndexRouteImport } from './routes/(dashboard)/rider/settlement/index'
import { Route as dashboardRiderMypageIndexRouteImport } from './routes/(dashboard)/rider/mypage/index'
import { Route as dashboardRiderHistoryIndexRouteImport } from './routes/(dashboard)/rider/history/index'
import { Route as dashboardCustomerSearchIndexRouteImport } from './routes/(dashboard)/customer/search/index'
import { Route as dashboardCustomerOrdersIndexRouteImport } from './routes/(dashboard)/customer/orders/index'
import { Route as dashboardCustomerMypageIndexRouteImport } from './routes/(dashboard)/customer/mypage/index'
import { Route as dashboardCustomerFavoritesIndexRouteImport } from './routes/(dashboard)/customer/favorites/index'
import { Route as dashboardCustomerCartIndexRouteImport } from './routes/(dashboard)/customer/cart/index'
import { Route as dashboardRiderOrdersOrderIdIndexRouteImport } from './routes/(dashboard)/rider/orders/$orderId/index'
import { Route as dashboardCustomerStoreStoreIdIndexRouteImport } from './routes/(dashboard)/customer/store/$storeId/index'
import { Route as dashboardCustomerOrdersOrderIdIndexRouteImport } from './routes/(dashboard)/customer/orders/$orderId/index'
import { Route as dashboardCustomerCategoryCategoryIndexRouteImport } from './routes/(dashboard)/customer/category/$category/index'
import { Route as dashboardSellerManageSettlementIdDetailRouteImport } from './routes/(dashboard)/seller/manage/$settlementId/detail'
import { Route as dashboardRiderOrdersOrderIdDetailRouteImport } from './routes/(dashboard)/rider/orders/$orderId/detail'
import { Route as dashboardCustomerStoreStoreIdProductProductIdIndexRouteImport } from './routes/(dashboard)/customer/store/$storeId/product/$productId/index'

const dashboardSellerRouteImport = createFileRoute('/(dashboard)/seller')()
const dashboardRiderRouteImport = createFileRoute('/(dashboard)/rider')()
const dashboardCustomerRouteImport = createFileRoute('/(dashboard)/customer')()

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const dashboardSellerRoute = dashboardSellerRouteImport.update({
  id: '/(dashboard)/seller',
  path: '/seller',
  getParentRoute: () => rootRouteImport,
} as any)
const dashboardRiderRoute = dashboardRiderRouteImport.update({
  id: '/(dashboard)/rider',
  path: '/rider',
  getParentRoute: () => rootRouteImport,
} as any)
const dashboardCustomerRoute = dashboardCustomerRouteImport.update({
  id: '/(dashboard)/customer',
  path: '/customer',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupIndexRoute = SignupIndexRouteImport.update({
  id: '/signup/',
  path: '/signup/',
  getParentRoute: () => rootRouteImport,
} as any)
const ManageAddressIndexRoute = ManageAddressIndexRouteImport.update({
  id: '/manage-address/',
  path: '/manage-address/',
  getParentRoute: () => rootRouteImport,
} as any)
const MakeProfileIndexRoute = MakeProfileIndexRouteImport.update({
  id: '/make-profile/',
  path: '/make-profile/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const PaymentSuccessRoute = PaymentSuccessRouteImport.update({
  id: '/payment/success',
  path: '/payment/success',
  getParentRoute: () => rootRouteImport,
} as any)
const PaymentFailRoute = PaymentFailRouteImport.update({
  id: '/payment/fail',
  path: '/payment/fail',
  getParentRoute: () => rootRouteImport,
} as any)
const MakeProfileSellerIndexRoute = MakeProfileSellerIndexRouteImport.update({
  id: '/make-profile/seller/',
  path: '/make-profile/seller/',
  getParentRoute: () => rootRouteImport,
} as any)
const MakeProfileRiderIndexRoute = MakeProfileRiderIndexRouteImport.update({
  id: '/make-profile/rider/',
  path: '/make-profile/rider/',
  getParentRoute: () => rootRouteImport,
} as any)
const MakeProfileCustomerIndexRoute =
  MakeProfileCustomerIndexRouteImport.update({
    id: '/make-profile/customer/',
    path: '/make-profile/customer/',
    getParentRoute: () => rootRouteImport,
  } as any)
const dashboardSellerIndexRoute = dashboardSellerIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => dashboardSellerRoute,
} as any)
const dashboardRiderIndexRoute = dashboardRiderIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => dashboardRiderRoute,
} as any)
const dashboardCustomerIndexRoute = dashboardCustomerIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => dashboardCustomerRoute,
} as any)
const dashboardSellerLayoutRoute = dashboardSellerLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => dashboardSellerRoute,
} as any)
const dashboardRiderLayoutRoute = dashboardRiderLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => dashboardRiderRoute,
} as any)
const dashboardCustomerLayoutRoute = dashboardCustomerLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => dashboardCustomerRoute,
} as any)
const dashboardSellerMypageIndexRoute =
  dashboardSellerMypageIndexRouteImport.update({
    id: '/mypage/',
    path: '/mypage/',
    getParentRoute: () => dashboardSellerRoute,
  } as any)
const dashboardSellerManageIndexRoute =
  dashboardSellerManageIndexRouteImport.update({
    id: '/manage/',
    path: '/manage/',
    getParentRoute: () => dashboardSellerRoute,
  } as any)
const dashboardSellerCreateStoreIndexRoute =
  dashboardSellerCreateStoreIndexRouteImport.update({
    id: '/create-store/',
    path: '/create-store/',
    getParentRoute: () => dashboardSellerRoute,
  } as any)
const dashboardRiderSettlementIndexRoute =
  dashboardRiderSettlementIndexRouteImport.update({
    id: '/settlement/',
    path: '/settlement/',
    getParentRoute: () => dashboardRiderRoute,
  } as any)
const dashboardRiderMypageIndexRoute =
  dashboardRiderMypageIndexRouteImport.update({
    id: '/mypage/',
    path: '/mypage/',
    getParentRoute: () => dashboardRiderRoute,
  } as any)
const dashboardRiderHistoryIndexRoute =
  dashboardRiderHistoryIndexRouteImport.update({
    id: '/history/',
    path: '/history/',
    getParentRoute: () => dashboardRiderRoute,
  } as any)
const dashboardCustomerSearchIndexRoute =
  dashboardCustomerSearchIndexRouteImport.update({
    id: '/search/',
    path: '/search/',
    getParentRoute: () => dashboardCustomerRoute,
  } as any)
const dashboardCustomerOrdersIndexRoute =
  dashboardCustomerOrdersIndexRouteImport.update({
    id: '/orders/',
    path: '/orders/',
    getParentRoute: () => dashboardCustomerRoute,
  } as any)
const dashboardCustomerMypageIndexRoute =
  dashboardCustomerMypageIndexRouteImport.update({
    id: '/mypage/',
    path: '/mypage/',
    getParentRoute: () => dashboardCustomerRoute,
  } as any)
const dashboardCustomerFavoritesIndexRoute =
  dashboardCustomerFavoritesIndexRouteImport.update({
    id: '/favorites/',
    path: '/favorites/',
    getParentRoute: () => dashboardCustomerRoute,
  } as any)
const dashboardCustomerCartIndexRoute =
  dashboardCustomerCartIndexRouteImport.update({
    id: '/cart/',
    path: '/cart/',
    getParentRoute: () => dashboardCustomerRoute,
  } as any)
const dashboardRiderOrdersOrderIdIndexRoute =
  dashboardRiderOrdersOrderIdIndexRouteImport.update({
    id: '/orders/$orderId/',
    path: '/orders/$orderId/',
    getParentRoute: () => dashboardRiderRoute,
  } as any)
const dashboardCustomerStoreStoreIdIndexRoute =
  dashboardCustomerStoreStoreIdIndexRouteImport.update({
    id: '/store/$storeId/',
    path: '/store/$storeId/',
    getParentRoute: () => dashboardCustomerRoute,
  } as any)
const dashboardCustomerOrdersOrderIdIndexRoute =
  dashboardCustomerOrdersOrderIdIndexRouteImport.update({
    id: '/orders/$orderId/',
    path: '/orders/$orderId/',
    getParentRoute: () => dashboardCustomerRoute,
  } as any)
const dashboardCustomerCategoryCategoryIndexRoute =
  dashboardCustomerCategoryCategoryIndexRouteImport.update({
    id: '/category/$category/',
    path: '/category/$category/',
    getParentRoute: () => dashboardCustomerRoute,
  } as any)
const dashboardSellerManageSettlementIdDetailRoute =
  dashboardSellerManageSettlementIdDetailRouteImport.update({
    id: '/manage/$settlementId/detail',
    path: '/manage/$settlementId/detail',
    getParentRoute: () => dashboardSellerRoute,
  } as any)
const dashboardRiderOrdersOrderIdDetailRoute =
  dashboardRiderOrdersOrderIdDetailRouteImport.update({
    id: '/orders/$orderId/detail',
    path: '/orders/$orderId/detail',
    getParentRoute: () => dashboardRiderRoute,
  } as any)
const dashboardCustomerStoreStoreIdProductProductIdIndexRoute =
  dashboardCustomerStoreStoreIdProductProductIdIndexRouteImport.update({
    id: '/store/$storeId/product/$productId/',
    path: '/store/$storeId/product/$productId/',
    getParentRoute: () => dashboardCustomerRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/payment/fail': typeof PaymentFailRoute
  '/payment/success': typeof PaymentSuccessRoute
  '/login': typeof LoginIndexRoute
  '/make-profile': typeof MakeProfileIndexRoute
  '/manage-address': typeof ManageAddressIndexRoute
  '/signup': typeof SignupIndexRoute
  '/customer': typeof dashboardCustomerLayoutRoute
  '/rider': typeof dashboardRiderLayoutRoute
  '/seller': typeof dashboardSellerLayoutRoute
  '/customer/': typeof dashboardCustomerIndexRoute
  '/rider/': typeof dashboardRiderIndexRoute
  '/seller/': typeof dashboardSellerIndexRoute
  '/make-profile/customer': typeof MakeProfileCustomerIndexRoute
  '/make-profile/rider': typeof MakeProfileRiderIndexRoute
  '/make-profile/seller': typeof MakeProfileSellerIndexRoute
  '/customer/cart': typeof dashboardCustomerCartIndexRoute
  '/customer/favorites': typeof dashboardCustomerFavoritesIndexRoute
  '/customer/mypage': typeof dashboardCustomerMypageIndexRoute
  '/customer/orders': typeof dashboardCustomerOrdersIndexRoute
  '/customer/search': typeof dashboardCustomerSearchIndexRoute
  '/rider/history': typeof dashboardRiderHistoryIndexRoute
  '/rider/mypage': typeof dashboardRiderMypageIndexRoute
  '/rider/settlement': typeof dashboardRiderSettlementIndexRoute
  '/seller/create-store': typeof dashboardSellerCreateStoreIndexRoute
  '/seller/manage': typeof dashboardSellerManageIndexRoute
  '/seller/mypage': typeof dashboardSellerMypageIndexRoute
  '/rider/orders/$orderId/detail': typeof dashboardRiderOrdersOrderIdDetailRoute
  '/seller/manage/$settlementId/detail': typeof dashboardSellerManageSettlementIdDetailRoute
  '/customer/category/$category': typeof dashboardCustomerCategoryCategoryIndexRoute
  '/customer/orders/$orderId': typeof dashboardCustomerOrdersOrderIdIndexRoute
  '/customer/store/$storeId': typeof dashboardCustomerStoreStoreIdIndexRoute
  '/rider/orders/$orderId': typeof dashboardRiderOrdersOrderIdIndexRoute
  '/customer/store/$storeId/product/$productId': typeof dashboardCustomerStoreStoreIdProductProductIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/payment/fail': typeof PaymentFailRoute
  '/payment/success': typeof PaymentSuccessRoute
  '/login': typeof LoginIndexRoute
  '/make-profile': typeof MakeProfileIndexRoute
  '/manage-address': typeof ManageAddressIndexRoute
  '/signup': typeof SignupIndexRoute
  '/customer': typeof dashboardCustomerIndexRoute
  '/rider': typeof dashboardRiderIndexRoute
  '/seller': typeof dashboardSellerIndexRoute
  '/make-profile/customer': typeof MakeProfileCustomerIndexRoute
  '/make-profile/rider': typeof MakeProfileRiderIndexRoute
  '/make-profile/seller': typeof MakeProfileSellerIndexRoute
  '/customer/cart': typeof dashboardCustomerCartIndexRoute
  '/customer/favorites': typeof dashboardCustomerFavoritesIndexRoute
  '/customer/mypage': typeof dashboardCustomerMypageIndexRoute
  '/customer/orders': typeof dashboardCustomerOrdersIndexRoute
  '/customer/search': typeof dashboardCustomerSearchIndexRoute
  '/rider/history': typeof dashboardRiderHistoryIndexRoute
  '/rider/mypage': typeof dashboardRiderMypageIndexRoute
  '/rider/settlement': typeof dashboardRiderSettlementIndexRoute
  '/seller/create-store': typeof dashboardSellerCreateStoreIndexRoute
  '/seller/manage': typeof dashboardSellerManageIndexRoute
  '/seller/mypage': typeof dashboardSellerMypageIndexRoute
  '/rider/orders/$orderId/detail': typeof dashboardRiderOrdersOrderIdDetailRoute
  '/seller/manage/$settlementId/detail': typeof dashboardSellerManageSettlementIdDetailRoute
  '/customer/category/$category': typeof dashboardCustomerCategoryCategoryIndexRoute
  '/customer/orders/$orderId': typeof dashboardCustomerOrdersOrderIdIndexRoute
  '/customer/store/$storeId': typeof dashboardCustomerStoreStoreIdIndexRoute
  '/rider/orders/$orderId': typeof dashboardRiderOrdersOrderIdIndexRoute
  '/customer/store/$storeId/product/$productId': typeof dashboardCustomerStoreStoreIdProductProductIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/payment/fail': typeof PaymentFailRoute
  '/payment/success': typeof PaymentSuccessRoute
  '/login/': typeof LoginIndexRoute
  '/make-profile/': typeof MakeProfileIndexRoute
  '/manage-address/': typeof ManageAddressIndexRoute
  '/signup/': typeof SignupIndexRoute
  '/(dashboard)/customer': typeof dashboardCustomerRouteWithChildren
  '/(dashboard)/customer/_layout': typeof dashboardCustomerLayoutRoute
  '/(dashboard)/rider': typeof dashboardRiderRouteWithChildren
  '/(dashboard)/rider/_layout': typeof dashboardRiderLayoutRoute
  '/(dashboard)/seller': typeof dashboardSellerRouteWithChildren
  '/(dashboard)/seller/_layout': typeof dashboardSellerLayoutRoute
  '/(dashboard)/customer/': typeof dashboardCustomerIndexRoute
  '/(dashboard)/rider/': typeof dashboardRiderIndexRoute
  '/(dashboard)/seller/': typeof dashboardSellerIndexRoute
  '/make-profile/customer/': typeof MakeProfileCustomerIndexRoute
  '/make-profile/rider/': typeof MakeProfileRiderIndexRoute
  '/make-profile/seller/': typeof MakeProfileSellerIndexRoute
  '/(dashboard)/customer/cart/': typeof dashboardCustomerCartIndexRoute
  '/(dashboard)/customer/favorites/': typeof dashboardCustomerFavoritesIndexRoute
  '/(dashboard)/customer/mypage/': typeof dashboardCustomerMypageIndexRoute
  '/(dashboard)/customer/orders/': typeof dashboardCustomerOrdersIndexRoute
  '/(dashboard)/customer/search/': typeof dashboardCustomerSearchIndexRoute
  '/(dashboard)/rider/history/': typeof dashboardRiderHistoryIndexRoute
  '/(dashboard)/rider/mypage/': typeof dashboardRiderMypageIndexRoute
  '/(dashboard)/rider/settlement/': typeof dashboardRiderSettlementIndexRoute
  '/(dashboard)/seller/create-store/': typeof dashboardSellerCreateStoreIndexRoute
  '/(dashboard)/seller/manage/': typeof dashboardSellerManageIndexRoute
  '/(dashboard)/seller/mypage/': typeof dashboardSellerMypageIndexRoute
  '/(dashboard)/rider/orders/$orderId/detail': typeof dashboardRiderOrdersOrderIdDetailRoute
  '/(dashboard)/seller/manage/$settlementId/detail': typeof dashboardSellerManageSettlementIdDetailRoute
  '/(dashboard)/customer/category/$category/': typeof dashboardCustomerCategoryCategoryIndexRoute
  '/(dashboard)/customer/orders/$orderId/': typeof dashboardCustomerOrdersOrderIdIndexRoute
  '/(dashboard)/customer/store/$storeId/': typeof dashboardCustomerStoreStoreIdIndexRoute
  '/(dashboard)/rider/orders/$orderId/': typeof dashboardRiderOrdersOrderIdIndexRoute
  '/(dashboard)/customer/store/$storeId/product/$productId/': typeof dashboardCustomerStoreStoreIdProductProductIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/payment/fail'
    | '/payment/success'
    | '/login'
    | '/make-profile'
    | '/manage-address'
    | '/signup'
    | '/customer'
    | '/rider'
    | '/seller'
    | '/customer/'
    | '/rider/'
    | '/seller/'
    | '/make-profile/customer'
    | '/make-profile/rider'
    | '/make-profile/seller'
    | '/customer/cart'
    | '/customer/favorites'
    | '/customer/mypage'
    | '/customer/orders'
    | '/customer/search'
    | '/rider/history'
    | '/rider/mypage'
    | '/rider/settlement'
    | '/seller/create-store'
    | '/seller/manage'
    | '/seller/mypage'
    | '/rider/orders/$orderId/detail'
    | '/seller/manage/$settlementId/detail'
    | '/customer/category/$category'
    | '/customer/orders/$orderId'
    | '/customer/store/$storeId'
    | '/rider/orders/$orderId'
    | '/customer/store/$storeId/product/$productId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/payment/fail'
    | '/payment/success'
    | '/login'
    | '/make-profile'
    | '/manage-address'
    | '/signup'
    | '/customer'
    | '/rider'
    | '/seller'
    | '/make-profile/customer'
    | '/make-profile/rider'
    | '/make-profile/seller'
    | '/customer/cart'
    | '/customer/favorites'
    | '/customer/mypage'
    | '/customer/orders'
    | '/customer/search'
    | '/rider/history'
    | '/rider/mypage'
    | '/rider/settlement'
    | '/seller/create-store'
    | '/seller/manage'
    | '/seller/mypage'
    | '/rider/orders/$orderId/detail'
    | '/seller/manage/$settlementId/detail'
    | '/customer/category/$category'
    | '/customer/orders/$orderId'
    | '/customer/store/$storeId'
    | '/rider/orders/$orderId'
    | '/customer/store/$storeId/product/$productId'
  id:
    | '__root__'
    | '/'
    | '/payment/fail'
    | '/payment/success'
    | '/login/'
    | '/make-profile/'
    | '/manage-address/'
    | '/signup/'
    | '/(dashboard)/customer'
    | '/(dashboard)/customer/_layout'
    | '/(dashboard)/rider'
    | '/(dashboard)/rider/_layout'
    | '/(dashboard)/seller'
    | '/(dashboard)/seller/_layout'
    | '/(dashboard)/customer/'
    | '/(dashboard)/rider/'
    | '/(dashboard)/seller/'
    | '/make-profile/customer/'
    | '/make-profile/rider/'
    | '/make-profile/seller/'
    | '/(dashboard)/customer/cart/'
    | '/(dashboard)/customer/favorites/'
    | '/(dashboard)/customer/mypage/'
    | '/(dashboard)/customer/orders/'
    | '/(dashboard)/customer/search/'
    | '/(dashboard)/rider/history/'
    | '/(dashboard)/rider/mypage/'
    | '/(dashboard)/rider/settlement/'
    | '/(dashboard)/seller/create-store/'
    | '/(dashboard)/seller/manage/'
    | '/(dashboard)/seller/mypage/'
    | '/(dashboard)/rider/orders/$orderId/detail'
    | '/(dashboard)/seller/manage/$settlementId/detail'
    | '/(dashboard)/customer/category/$category/'
    | '/(dashboard)/customer/orders/$orderId/'
    | '/(dashboard)/customer/store/$storeId/'
    | '/(dashboard)/rider/orders/$orderId/'
    | '/(dashboard)/customer/store/$storeId/product/$productId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PaymentFailRoute: typeof PaymentFailRoute
  PaymentSuccessRoute: typeof PaymentSuccessRoute
  LoginIndexRoute: typeof LoginIndexRoute
  MakeProfileIndexRoute: typeof MakeProfileIndexRoute
  ManageAddressIndexRoute: typeof ManageAddressIndexRoute
  SignupIndexRoute: typeof SignupIndexRoute
  dashboardCustomerRoute: typeof dashboardCustomerRouteWithChildren
  dashboardRiderRoute: typeof dashboardRiderRouteWithChildren
  dashboardSellerRoute: typeof dashboardSellerRouteWithChildren
  MakeProfileCustomerIndexRoute: typeof MakeProfileCustomerIndexRoute
  MakeProfileRiderIndexRoute: typeof MakeProfileRiderIndexRoute
  MakeProfileSellerIndexRoute: typeof MakeProfileSellerIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboard)/seller': {
      id: '/(dashboard)/seller'
      path: '/seller'
      fullPath: '/seller'
      preLoaderRoute: typeof dashboardSellerRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboard)/rider': {
      id: '/(dashboard)/rider'
      path: '/rider'
      fullPath: '/rider'
      preLoaderRoute: typeof dashboardRiderRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboard)/customer': {
      id: '/(dashboard)/customer'
      path: '/customer'
      fullPath: '/customer'
      preLoaderRoute: typeof dashboardCustomerRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup/': {
      id: '/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/manage-address/': {
      id: '/manage-address/'
      path: '/manage-address'
      fullPath: '/manage-address'
      preLoaderRoute: typeof ManageAddressIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/make-profile/': {
      id: '/make-profile/'
      path: '/make-profile'
      fullPath: '/make-profile'
      preLoaderRoute: typeof MakeProfileIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/payment/success': {
      id: '/payment/success'
      path: '/payment/success'
      fullPath: '/payment/success'
      preLoaderRoute: typeof PaymentSuccessRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/payment/fail': {
      id: '/payment/fail'
      path: '/payment/fail'
      fullPath: '/payment/fail'
      preLoaderRoute: typeof PaymentFailRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/make-profile/seller/': {
      id: '/make-profile/seller/'
      path: '/make-profile/seller'
      fullPath: '/make-profile/seller'
      preLoaderRoute: typeof MakeProfileSellerIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/make-profile/rider/': {
      id: '/make-profile/rider/'
      path: '/make-profile/rider'
      fullPath: '/make-profile/rider'
      preLoaderRoute: typeof MakeProfileRiderIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/make-profile/customer/': {
      id: '/make-profile/customer/'
      path: '/make-profile/customer'
      fullPath: '/make-profile/customer'
      preLoaderRoute: typeof MakeProfileCustomerIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboard)/seller/': {
      id: '/(dashboard)/seller/'
      path: '/'
      fullPath: '/seller/'
      preLoaderRoute: typeof dashboardSellerIndexRouteImport
      parentRoute: typeof dashboardSellerRoute
    }
    '/(dashboard)/rider/': {
      id: '/(dashboard)/rider/'
      path: '/'
      fullPath: '/rider/'
      preLoaderRoute: typeof dashboardRiderIndexRouteImport
      parentRoute: typeof dashboardRiderRoute
    }
    '/(dashboard)/customer/': {
      id: '/(dashboard)/customer/'
      path: '/'
      fullPath: '/customer/'
      preLoaderRoute: typeof dashboardCustomerIndexRouteImport
      parentRoute: typeof dashboardCustomerRoute
    }
    '/(dashboard)/seller/_layout': {
      id: '/(dashboard)/seller/_layout'
      path: '/seller'
      fullPath: '/seller'
      preLoaderRoute: typeof dashboardSellerLayoutRouteImport
      parentRoute: typeof dashboardSellerRoute
    }
    '/(dashboard)/rider/_layout': {
      id: '/(dashboard)/rider/_layout'
      path: '/rider'
      fullPath: '/rider'
      preLoaderRoute: typeof dashboardRiderLayoutRouteImport
      parentRoute: typeof dashboardRiderRoute
    }
    '/(dashboard)/customer/_layout': {
      id: '/(dashboard)/customer/_layout'
      path: '/customer'
      fullPath: '/customer'
      preLoaderRoute: typeof dashboardCustomerLayoutRouteImport
      parentRoute: typeof dashboardCustomerRoute
    }
    '/(dashboard)/seller/mypage/': {
      id: '/(dashboard)/seller/mypage/'
      path: '/mypage'
      fullPath: '/seller/mypage'
      preLoaderRoute: typeof dashboardSellerMypageIndexRouteImport
      parentRoute: typeof dashboardSellerRoute
    }
    '/(dashboard)/seller/manage/': {
      id: '/(dashboard)/seller/manage/'
      path: '/manage'
      fullPath: '/seller/manage'
      preLoaderRoute: typeof dashboardSellerManageIndexRouteImport
      parentRoute: typeof dashboardSellerRoute
    }
    '/(dashboard)/seller/create-store/': {
      id: '/(dashboard)/seller/create-store/'
      path: '/create-store'
      fullPath: '/seller/create-store'
      preLoaderRoute: typeof dashboardSellerCreateStoreIndexRouteImport
      parentRoute: typeof dashboardSellerRoute
    }
    '/(dashboard)/rider/settlement/': {
      id: '/(dashboard)/rider/settlement/'
      path: '/settlement'
      fullPath: '/rider/settlement'
      preLoaderRoute: typeof dashboardRiderSettlementIndexRouteImport
      parentRoute: typeof dashboardRiderRoute
    }
    '/(dashboard)/rider/mypage/': {
      id: '/(dashboard)/rider/mypage/'
      path: '/mypage'
      fullPath: '/rider/mypage'
      preLoaderRoute: typeof dashboardRiderMypageIndexRouteImport
      parentRoute: typeof dashboardRiderRoute
    }
    '/(dashboard)/rider/history/': {
      id: '/(dashboard)/rider/history/'
      path: '/history'
      fullPath: '/rider/history'
      preLoaderRoute: typeof dashboardRiderHistoryIndexRouteImport
      parentRoute: typeof dashboardRiderRoute
    }
    '/(dashboard)/customer/search/': {
      id: '/(dashboard)/customer/search/'
      path: '/search'
      fullPath: '/customer/search'
      preLoaderRoute: typeof dashboardCustomerSearchIndexRouteImport
      parentRoute: typeof dashboardCustomerRoute
    }
    '/(dashboard)/customer/orders/': {
      id: '/(dashboard)/customer/orders/'
      path: '/orders'
      fullPath: '/customer/orders'
      preLoaderRoute: typeof dashboardCustomerOrdersIndexRouteImport
      parentRoute: typeof dashboardCustomerRoute
    }
    '/(dashboard)/customer/mypage/': {
      id: '/(dashboard)/customer/mypage/'
      path: '/mypage'
      fullPath: '/customer/mypage'
      preLoaderRoute: typeof dashboardCustomerMypageIndexRouteImport
      parentRoute: typeof dashboardCustomerRoute
    }
    '/(dashboard)/customer/favorites/': {
      id: '/(dashboard)/customer/favorites/'
      path: '/favorites'
      fullPath: '/customer/favorites'
      preLoaderRoute: typeof dashboardCustomerFavoritesIndexRouteImport
      parentRoute: typeof dashboardCustomerRoute
    }
    '/(dashboard)/customer/cart/': {
      id: '/(dashboard)/customer/cart/'
      path: '/cart'
      fullPath: '/customer/cart'
      preLoaderRoute: typeof dashboardCustomerCartIndexRouteImport
      parentRoute: typeof dashboardCustomerRoute
    }
    '/(dashboard)/rider/orders/$orderId/': {
      id: '/(dashboard)/rider/orders/$orderId/'
      path: '/orders/$orderId'
      fullPath: '/rider/orders/$orderId'
      preLoaderRoute: typeof dashboardRiderOrdersOrderIdIndexRouteImport
      parentRoute: typeof dashboardRiderRoute
    }
    '/(dashboard)/customer/store/$storeId/': {
      id: '/(dashboard)/customer/store/$storeId/'
      path: '/store/$storeId'
      fullPath: '/customer/store/$storeId'
      preLoaderRoute: typeof dashboardCustomerStoreStoreIdIndexRouteImport
      parentRoute: typeof dashboardCustomerRoute
    }
    '/(dashboard)/customer/orders/$orderId/': {
      id: '/(dashboard)/customer/orders/$orderId/'
      path: '/orders/$orderId'
      fullPath: '/customer/orders/$orderId'
      preLoaderRoute: typeof dashboardCustomerOrdersOrderIdIndexRouteImport
      parentRoute: typeof dashboardCustomerRoute
    }
    '/(dashboard)/customer/category/$category/': {
      id: '/(dashboard)/customer/category/$category/'
      path: '/category/$category'
      fullPath: '/customer/category/$category'
      preLoaderRoute: typeof dashboardCustomerCategoryCategoryIndexRouteImport
      parentRoute: typeof dashboardCustomerRoute
    }
    '/(dashboard)/seller/manage/$settlementId/detail': {
      id: '/(dashboard)/seller/manage/$settlementId/detail'
      path: '/manage/$settlementId/detail'
      fullPath: '/seller/manage/$settlementId/detail'
      preLoaderRoute: typeof dashboardSellerManageSettlementIdDetailRouteImport
      parentRoute: typeof dashboardSellerRoute
    }
    '/(dashboard)/rider/orders/$orderId/detail': {
      id: '/(dashboard)/rider/orders/$orderId/detail'
      path: '/orders/$orderId/detail'
      fullPath: '/rider/orders/$orderId/detail'
      preLoaderRoute: typeof dashboardRiderOrdersOrderIdDetailRouteImport
      parentRoute: typeof dashboardRiderRoute
    }
    '/(dashboard)/customer/store/$storeId/product/$productId/': {
      id: '/(dashboard)/customer/store/$storeId/product/$productId/'
      path: '/store/$storeId/product/$productId'
      fullPath: '/customer/store/$storeId/product/$productId'
      preLoaderRoute: typeof dashboardCustomerStoreStoreIdProductProductIdIndexRouteImport
      parentRoute: typeof dashboardCustomerRoute
    }
  }
}

interface dashboardCustomerRouteChildren {
  dashboardCustomerLayoutRoute: typeof dashboardCustomerLayoutRoute
  dashboardCustomerIndexRoute: typeof dashboardCustomerIndexRoute
  dashboardCustomerCartIndexRoute: typeof dashboardCustomerCartIndexRoute
  dashboardCustomerFavoritesIndexRoute: typeof dashboardCustomerFavoritesIndexRoute
  dashboardCustomerMypageIndexRoute: typeof dashboardCustomerMypageIndexRoute
  dashboardCustomerOrdersIndexRoute: typeof dashboardCustomerOrdersIndexRoute
  dashboardCustomerSearchIndexRoute: typeof dashboardCustomerSearchIndexRoute
  dashboardCustomerCategoryCategoryIndexRoute: typeof dashboardCustomerCategoryCategoryIndexRoute
  dashboardCustomerOrdersOrderIdIndexRoute: typeof dashboardCustomerOrdersOrderIdIndexRoute
  dashboardCustomerStoreStoreIdIndexRoute: typeof dashboardCustomerStoreStoreIdIndexRoute
  dashboardCustomerStoreStoreIdProductProductIdIndexRoute: typeof dashboardCustomerStoreStoreIdProductProductIdIndexRoute
}

const dashboardCustomerRouteChildren: dashboardCustomerRouteChildren = {
  dashboardCustomerLayoutRoute: dashboardCustomerLayoutRoute,
  dashboardCustomerIndexRoute: dashboardCustomerIndexRoute,
  dashboardCustomerCartIndexRoute: dashboardCustomerCartIndexRoute,
  dashboardCustomerFavoritesIndexRoute: dashboardCustomerFavoritesIndexRoute,
  dashboardCustomerMypageIndexRoute: dashboardCustomerMypageIndexRoute,
  dashboardCustomerOrdersIndexRoute: dashboardCustomerOrdersIndexRoute,
  dashboardCustomerSearchIndexRoute: dashboardCustomerSearchIndexRoute,
  dashboardCustomerCategoryCategoryIndexRoute:
    dashboardCustomerCategoryCategoryIndexRoute,
  dashboardCustomerOrdersOrderIdIndexRoute:
    dashboardCustomerOrdersOrderIdIndexRoute,
  dashboardCustomerStoreStoreIdIndexRoute:
    dashboardCustomerStoreStoreIdIndexRoute,
  dashboardCustomerStoreStoreIdProductProductIdIndexRoute:
    dashboardCustomerStoreStoreIdProductProductIdIndexRoute,
}

const dashboardCustomerRouteWithChildren =
  dashboardCustomerRoute._addFileChildren(dashboardCustomerRouteChildren)

interface dashboardRiderRouteChildren {
  dashboardRiderLayoutRoute: typeof dashboardRiderLayoutRoute
  dashboardRiderIndexRoute: typeof dashboardRiderIndexRoute
  dashboardRiderHistoryIndexRoute: typeof dashboardRiderHistoryIndexRoute
  dashboardRiderMypageIndexRoute: typeof dashboardRiderMypageIndexRoute
  dashboardRiderSettlementIndexRoute: typeof dashboardRiderSettlementIndexRoute
  dashboardRiderOrdersOrderIdDetailRoute: typeof dashboardRiderOrdersOrderIdDetailRoute
  dashboardRiderOrdersOrderIdIndexRoute: typeof dashboardRiderOrdersOrderIdIndexRoute
}

const dashboardRiderRouteChildren: dashboardRiderRouteChildren = {
  dashboardRiderLayoutRoute: dashboardRiderLayoutRoute,
  dashboardRiderIndexRoute: dashboardRiderIndexRoute,
  dashboardRiderHistoryIndexRoute: dashboardRiderHistoryIndexRoute,
  dashboardRiderMypageIndexRoute: dashboardRiderMypageIndexRoute,
  dashboardRiderSettlementIndexRoute: dashboardRiderSettlementIndexRoute,
  dashboardRiderOrdersOrderIdDetailRoute:
    dashboardRiderOrdersOrderIdDetailRoute,
  dashboardRiderOrdersOrderIdIndexRoute: dashboardRiderOrdersOrderIdIndexRoute,
}

const dashboardRiderRouteWithChildren = dashboardRiderRoute._addFileChildren(
  dashboardRiderRouteChildren,
)

interface dashboardSellerRouteChildren {
  dashboardSellerLayoutRoute: typeof dashboardSellerLayoutRoute
  dashboardSellerIndexRoute: typeof dashboardSellerIndexRoute
  dashboardSellerCreateStoreIndexRoute: typeof dashboardSellerCreateStoreIndexRoute
  dashboardSellerManageIndexRoute: typeof dashboardSellerManageIndexRoute
  dashboardSellerMypageIndexRoute: typeof dashboardSellerMypageIndexRoute
  dashboardSellerManageSettlementIdDetailRoute: typeof dashboardSellerManageSettlementIdDetailRoute
}

const dashboardSellerRouteChildren: dashboardSellerRouteChildren = {
  dashboardSellerLayoutRoute: dashboardSellerLayoutRoute,
  dashboardSellerIndexRoute: dashboardSellerIndexRoute,
  dashboardSellerCreateStoreIndexRoute: dashboardSellerCreateStoreIndexRoute,
  dashboardSellerManageIndexRoute: dashboardSellerManageIndexRoute,
  dashboardSellerMypageIndexRoute: dashboardSellerMypageIndexRoute,
  dashboardSellerManageSettlementIdDetailRoute:
    dashboardSellerManageSettlementIdDetailRoute,
}

const dashboardSellerRouteWithChildren = dashboardSellerRoute._addFileChildren(
  dashboardSellerRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PaymentFailRoute: PaymentFailRoute,
  PaymentSuccessRoute: PaymentSuccessRoute,
  LoginIndexRoute: LoginIndexRoute,
  MakeProfileIndexRoute: MakeProfileIndexRoute,
  ManageAddressIndexRoute: ManageAddressIndexRoute,
  SignupIndexRoute: SignupIndexRoute,
  dashboardCustomerRoute: dashboardCustomerRouteWithChildren,
  dashboardRiderRoute: dashboardRiderRouteWithChildren,
  dashboardSellerRoute: dashboardSellerRouteWithChildren,
  MakeProfileCustomerIndexRoute: MakeProfileCustomerIndexRoute,
  MakeProfileRiderIndexRoute: MakeProfileRiderIndexRoute,
  MakeProfileSellerIndexRoute: MakeProfileSellerIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
